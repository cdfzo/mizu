import type { Icons } from '../utils/icons'

/* eslint max-lines: 0 */
export const icons: Icons = {
  admin: ['/(admin|manager|moderation|moderator)s?'],
  animation: ['/(anim|animation)s?'],
  api: [
    '/(|base_|global-|open|public-|rest|rest-|web-)api',
    '/(api_def|apis|rest)',
  ],
  app: ['/(app|application|platform|program|project)s?', '*.app'],
  archive: ['/(arc|archive|archival)s?', '/archived'],
  audio: [
    '/(sound|soundtrack|track)s?',
    '/(aud|audio)',
    '*.(3ga|aa3|aac|aacp|aif|aifc|aiff|amr|ape|at3|at9|atp|au|caf|flac|hma)',
    '*.(lbc|m1a|m2a|m4a|m4b|mp+|mp1|mp2|mp3|mpa|mpc|mpp|mt9|ogg|oma|omg|opus)',
    '*.(pcm|qcp|ra|ram|shn|sil|snd|spx|tta|wav|wave|wma|wv|wvc)',
  ],
  auth: [
    '/(auth|authenticate|authenticatable|devise|oauth|sesh)',
    '/(authentication|cookie|session)s?',
  ],
  benchmark: [
    '/(bench|measure|performance|profiling|speed|stress)',
    '/(benchmark|measurement)s?',
  ],
  binary: [
    '/binary',
    '*.(aea|agc|ags|argus|asm|bin|binsource|inc|mitigus|nasm|s)',
  ],
  boot: ['/(boot|reboot|startup)', '/bootloaders?'],
  broadcast: ['/broadcasts?'],
  calendar: ['/(calendar|date|meeting)s?', '*.(ical|icalendar|ics|ifb)'],
  cd: ['*.(iso|udf)'],
  certificate: [
    '/(ca-cert|ca-certificates|ssl|ssl-cert|tls)',
    '/(cert|certificate|certification|verification)s?',
    '/(verify|verified)',
  ],
  chat: [
    '/(chat|convo|conversation|dm|forum|msg|message|pm|post)s?',
    '/messaging',
  ],
  chess: ['*.(fe|pg)n'],
  ci: ['/(actions|ci)', 'ci'],
  cloud: ['/(.aws|aws|cloud|drive|iclouddrive|onedrive)'],
  code: ['/(code|main|sourcecode)', '/(cli|cmd|command|console|src|source)s?'],
  component: [
    '/(category|categories)',
    '/(component|element|frag|fragment|part|partial)s?',
  ],
  conduct: ['code_of_conduct(|.md|.rst)'],
  config: [
    '/(cfg|conf|config|configuration|configurator|preference|setting)s?',
    '/(local settings|setup)',
    '/.(config|settings)',
    '*.(cfg|cnf|conf|config|ini|options|prefs|properties|props|settings)',
    '(config|setup)',
  ],
  contact: ['/contacts?', '/(contactable|userdata)', '*.(vcard|vcf)'],
  controller: ['/(controller|handler|provider)s?'],
  core: ['/(core|kernel)s?', '/cpu', '*.(exe|msi)'],
  cron: [
    '/(cron|cronjob|schedule)s?',
    '/(periodic|daily|hourly|weekly|monthly|watch|watcher|watchers)',
    '/timer?',
    'jobs',
  ],
  cursor: ['/cursors?', '*.cur'],
  database: [
    '/(db|database|migration|seed)s?',
    '/(dbms|migrate|query|queries|sql)',
    '*.(db|dump|pdb|pgsql|pkb|pks|sql)',
  ],
  danger: ['/(danger|risk|warning)s?'],
  debug: ['/(bugfix|bugfixes)', '/bugs?', '/debug(|ging)'],
  debugHistory: ['.(byebug|irb|rdbg)_history'],
  default: [],
  desktop: ['/(desk|desktop|tablet)s?'],
  dist: [
    '/(build|deploy|deployment|dist|distrib|output|pub|release)s?',
    '/(_build|desktop-build|out|web-build)',
    '/(|.|cgi-|e|s|usr)bin',
    'release',
  ],
  document: [
    '/(doc|document|documentation)s?',
    '/my documents',
    'readme(.md|.rst|.txt)',
  ],
  download: [
    '/(dl|download|downloader|install|installation|installer)s?',
    '/(update|updater|upgrade)s?',
    '/installed',
  ],
  environment: [
    '/(dev|development|devenvironment|prod|production|staging)',
    '/(env|environment|venv|virtualenv)s?',
    '/.v?env',
    '*.env',
    '(.?env|secrets)',
    '.env.(defaults|dist|example|sample|template)',
    '.env.(dev|development|local|prod|production|test)',
  ],
  error: [
    '/crash(|es|ing)',
    '/(err|error|exception|fail|failure|fault|panic|problem)s?',
  ],
  etc: ['/(alt|alternative|etc|extra|other)s?', '/(misc|miscellaneous|more)'],
  event: ['/(alert|event|notif|notification|state)s?', '/config_states'],
  example: [
    '/(demo|example|idea|sample|trial|usecase)s?',
    '/(sample-data|sandbox)',
    '*.(example|sample)',
  ],
  experimental: ['/(exp|experimental)s?', '/(try|unstable|wip)'],
  export: ['/export(|ed|s)'],
  factory: ['/(factory|factories)s?'],
  feedback: ['/(feedback|support)', '/(issue|question|report|request)s?'],
  file: ['/(asset|file|resource)s?', '/(filedata|res|static)'],
  filter: ['/filter(|s|ing)', '/sort(|ing)'],
  folder: ['/(dir|folder)s?', '/(directory|directories)'],
  font: [
    '/(fnt|font|webfont)s?',
    '*.(dfont|eot|fnt|odttf|otf|pfa|pfb|t11|t42|ttc|tte|ttf|ttf.bin|ufo|ufo2)',
    '*.(ufo3|woff|woff2)',
  ],
  form: ['/(form|input)s?'],
  game: ['/game(|s|ing)', '/(saved games|xboxgames)'],
  generator: [
    '/(auto|autoload|automatic|autostart)',
    '/(autoloader|gen|generator)s?',
    '/generated?',
  ],
  global: [
    '/(browser|global|site|website|world)s?',
    '/(g11n|public|web|www|wwwroot)',
    '/globali(s|z)ation',
  ],
  group: [
    '/(community|communities|people)',
    '/(customer|friend|group|member|partner|team)s?',
    '(authors|contributors)(|.md|.rst|.txt)',
  ],
  guard: ['/(protected|secure|security)', '/guards?', 'security(|.md|.txt)'],
  help: ['/helpers?', '/render-helpers'],
  home: ['/(address|home|menu|start|start menu|startpage)'],
  hook: [
    '/(hook|posthook|webhook)s?',
    '(applypatch-msg|commit-msg|docker-setup|prepare-commit-msg)',
    'post-(deploy|proxy-reboot|update)',
    'pre-(applypatch|build|commit|connect|deploy|merge-commit|proxy-reboot)',
    'pre-(push|rebase|receive)',
  ],
  ignore: ['/ignore(|d|s)', '/skip(|ped|s)', '*.ignore'],
  image: [
    '/(accountpictures|branding|m|media|my pictures)',
    '/(avatar|brand|fig|figure|img|image|logo|pfp|photo|pic|picture)s?',
    '/screen(grab|shot)s?',
    '*.(afphoto|apng|apx|ase|aseprite|avci|avcs|avif|avifs|bmp|bpg|brk|clip)',
    '*.(cpt|dds|dib|djv|djvu|dng|eps|exr|flif|fpx|gbr|gif|hdp|heic|heics|heif)',
    '*.(heifs|icns|ico|img|j2c|j2k|jb2|jbg|jbig|jbig2|jfi|jfif|jif|jng|jp2)',
    '*.(jpc|jpe|jpeg|jpf|jpg|jpg2|jpm|jpx|jxl|jxr|jxs|kra|mdp|mng|ora|pbm|pdn)',
    '*.(pgf|pgm|pic|png|pnm|ppm|qoi|qtvr|raw|sai|sai2|six|sixel|tga|tif|tiff)',
    '*.(wbmp|wdp|webp|wp2|xcf)',
  ],
  import: ['/(import|include)s?', '/(in|inc|incl)'],
  initialize: ['/(flag|init|initialiser|initializer)s?', '/initialize'],
  job: ['/jobs?'],
  key: [
    '/(key|pwd|passwd|password|secret|tkn|token)s?',
    '/jwt',
    '*.(asc|gpg|key|pem|pub)',
    '(.htpasswd|local_secret.txt)',
  ],
  layer: ['/(layer|stack)s?'],
  layout: ['/(feed|layout|page)s?'],
  lib: [
    '/(library|libraries)',
    '/lib(32|x32|64)',
    '/libs?',
    '*.(dlc|dll|drv|ocx)',
  ],
  license: [
    '(codeowners|patent_grant)',
    'copyright(|.md|.txt)',
    'licen(c|s)e(|.md|.rst|.txt|-apache|-mit)',
  ],
  like: ['/(fav|favorite|like)s?'],
  link: ['/(link|shortcut|url)s?', '*.url'],
  lint: ['/(lint|linter|validator)s?', '/valid', 'lint'],
  locale: [
    '/(gettext|i18n|l10n|t|tl|translate)',
    '/(intl|internationalisation|internationalization|lng|lang|language)s?',
    '/(localise|localize)',
    '/(locale|localisation|localization|translation|translator)s?',
    '*.po(|t)',
  ],
  location: ['/(geo|geolocation|location|map|mapper|position)s?'],
  lock: ['/(|.|_)(priv|private)', '/hidden', '/lock(|d|ed|s)', '*.(enc|lock)'],
  log: ['/(list|log|logger)s?', '/logging', '*.log', 'credits(.md|.rst|.txt)'],
  login: ['/(login|registration|signin|signup)s?'],
  logout: ['/(logout|signout)s?'],
  mail: [
    '/(mail|mailer|email|e-mail)s?',
    '/(mailoutput|mailtodisk|phpmailer|smtp|webmail)',
    '*.(eml|emlx|mbx|msg)',
    '.mailmap',
  ],
  mobile: [
    '/(client|mobile|screen|smartphone)s?',
    '/(front-end|frontend|portable|portability|pwa|webapp)',
  ],
  mock: [
    '/(concept|draft|fixture|mock|mockup)s?',
    '/(sketch|sketches)',
    '/__mocks__',
  ],
  model: ['/(class|classes)', '/(model|schema)s?', '*.drawio'],
  music: ['/music', '*.(als|dmpatch|fst|mid|ppsf|vpr|vsq|vsqx)'],
  package: ['/(pkg|package)s?', 'package.(json|md)'],
  packageLock: ['package-lock.json'],
  path: ['/(path|root)s?', '/fs', '/filesystems?'],
  payment: [
    '/(banking|income|money|revenue|tax|taxes)',
    '/(finance|payment|wallet)s?',
  ],
  pet: ['/.husky', '.huskyrc(|.js|.json|.yml|.yaml)', 'husky.config.js'],
  pipe: ['/pipes?'],
  plugin: [
    '/(addon|ext|extension|mw|middleware|mod|module|plugin)s?',
    '/builtin',
  ],
  repository: ['/(repository|repositories)', '/repos?'],
  restore: ['/recovery?', '/restored?', '/undo'],
  review: ['/(preview|review|revisal)s?', '/reviewed'],
  robot: [
    '/(ai|ai-art|artificial)',
    '/(bot|robot|crawler|webcrawler|transformer)s?',
    '/(dalle|deepbooru|esrgan|gfpgan|gpt|lora|stable-diffusion|swinir|vae)',
    'robots.txt',
  ],
  role: ['/(perm|permission|privilege|role|userrole)s?'],
  route: ['/(route|router)s?', '/routing'],
  run: [
    '/(common_runtime|distributed_runtime|run|runtime_client)',
    '/(runner|runtime)s?',
    '/runner.(xcodeproj|xcworkspace)',
    '(.runner|run|dev)',
  ],
  save: ['/bookmarks?', '/sav(e|ed|ing)'],
  search: ['/(search|searches)', '/(find|lookup)s?'],
  server: [
    '/(api-server|back-end|backend)',
    '/(pid|port|server|socket)s?',
    '*.pid',
  ],
  service: ['/(service|webservice)s?'],
  shader: ['/(g|h)lsl', '/shaders?'],
  share: ['/(common|redirect)s?', '/sendto', '/share(|d|ing)'],
  spreadsheet: ['/(sheet|spreadsheet)s?', '*.(csv|ods|psv|tsv)'],
  star: [
    '/favicons?',
    '/starred',
    'favicon.(ico|png|svg)',
    'favicon-(16|16x16|32|32x32|48|48x48).(png|svg)',
  ],
  stats: ['/(diagram|stat|statistic)s?', '/numbers', '*.numbers'],
  storage: ['/(bk|bkp|bak|backup|back-up|dump|store|storage)s?', '/syncbackup'],
  syntax: ['/spellchecks?', '/(syntax|syntaxes)'],
  target: ['/targets?'],
  task: ['/(task|ticket|todo)s?', 'todos?(|.md|.txt)', '*.todo'],
  template: ['/_?(templ|template)s?'],
  temporary: [
    '/(.pkg-cache|package cache|cached|onedrivetemp|systemtemp)',
    '/.?(cache|tmp|temp|temporary)',
  ],
  test: [
    '/(|.|_)tests?',
    '/(boot|e2e|integration|kernel|memory|unit)(|-|_)tests?',
    '/(coverage|it|integration|e2e|runnertests|testing|unit)',
    '/__(e2e|test|tests)__',
    '/specs?',
    '(check|test)',
  ],
  text: ['/texts?', '*.txt'],
  texture: ['/textures?', '/uv'],
  theme: ['/(color|design|theme)s?'],
  threed: [
    '/3d',
    '*.(3d|ac|blend|fbx|kv6|mesh|mqo|obj|pmd|pmx|skp|stl|stp|vac|vox|voxb|x)',
  ],
  tool: ['/(tool|toolkit)s?', '/(toolbox|toolboxes)'],
  trash: ['/.?trash', '/(delete|remove)d?', 'null'],
  tutorial: [
    '/(guide|intro|introduction|tut|tutorial)s?',
    '/how-?to',
    '/learn(|ing)',
  ],
  upload: ['/(publisher|upload|uploader)s?', '/publish'],
  user: [
    '/(all users|default user|pers|person|personal)',
    '/(profile|usr|user)s?',
  ],
  util: ['/(utilities|utility)', '/test-utils', '/utils?'],
  vendor: ['/third(|-|_)party', '/vendors?'],
  version: [
    '/(changelog|new|version)s?',
    '/history',
    '(changelog|changes|news|version)(|.md|.rst|.txt)',
  ],
  video: [
    '/(cap|capture|clip|mov|movie|vid|video)s?',
    '/(v|my videos)',
    '*.(3g2|3gp|av1|avc1|avchd|avi|bik|bk2|f4v|flv|gifv|hevc|ivf|m1v|m2v|m4p)',
    '*.(m4r|m4v|mj2|mjp2|mkv|mov|mp4|mpe|mpeg|mpg|mpv|ogv|qt|rm|rmvb|smk|swf)',
    '*.(vob|webm|wmv|yuv)',
  ],
  widget: ['/widgets?'],
  wizard: ['/wizards?'],
  work: ['/(biz|business|work|working)', '/(service-worker|worker)s?'],
  workspace: ['/workspaces?', '*.workspace', 'workspace'],
  wrapper: ['/(wrap|wrapper)s?'],
  zip: [
    '*.(7z|a|ace|ar|arc|br|bz2|bzip2|cpio|gz|gzip|lbr|lz|lz4|lzma|lzo|rar|rz)',
    '*.(s7z|sbx|sfark|shar|sz|tar|tbz2|tgz|tlz|txz|tz|xz|z|zip|zipx|zst)',
  ],
}
