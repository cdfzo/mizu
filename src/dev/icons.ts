import { Icons } from '../utils/icons'

/* eslint max-lines: 0 */
export const icons: Icons = {
  access: [
    '*.accda',
    '*.accdb',
    '*.accde',
    '*.accdr',
    '*.accdt',
    '*.adn',
    '*.laccdb',
    '*.maf',
    '*.mam',
    '*.maq',
    '*.mar',
    '*.mdb',
    '*.mdw',
  ],
  actionscript: ['*.as'],
  ada: ['*.ada', '*.adb', '*.ads'],
  admin: [
    '/admin',
    '/admins',
    '/manager',
    '/managers',
    '/moderator',
    '/moderators',
  ],
  adobe: ['/adobe', '/creative cloud files'],
  aftereffects: ['*.aep'],
  agda: ['*.agda', '*.lagda'],
  android: [
    '/.android',
    '/android',
    '/androidstudioprojects',
    '/apk',
    '*.aab',
    '*.apk',
    '*.apkm',
    '*.apks',
    '*.dex',
    '*.smali',
    '*.xapk',
    'androidmanifest.xml',
  ],
  angular: [
    '.angular-cli.json',
    'angular-cli.json',
    'angular.json',
    'ng-package.json',
  ],
  antlr: ['*.g4'],
  apache: ['.htaccess'],
  api: [
    '/api',
    '/api_def',
    '/apis',
    '/base_api',
    '/global-api',
    '/openapi',
    '/rest',
    '/rest-api',
    '/restapi',
  ],
  app: [
    '/app',
    '/application',
    '/applications',
    '/apps',
    '/program files (x86)',
    '/program files',
    '/program',
    '/programs',
  ],
  applescript: ['*.applescript', '*.ipa', '*.scpt', '*.scptd'],
  appletouchicon: ['apple-touch-icon-precomposed.png', 'apple-touch-icon.png'],
  appveyor: ['.appveyor.yml', 'appveyor.yml'],
  archive: ['/arc', '/archival', '/archive', '/archived', '/archives', '/arcs'],
  arduino: ['*.ino'],
  aspnet: ['*.asp', '*.aspx', '*.cshtml', '*.razor', '*.vbhtml'],
  binary: [
    '*.aea',
    '*.agc',
    '*.ags',
    '*.argus',
    '*.asm',
    '*.bin',
    '*.binsource',
    '*.inc',
    '*.mitigus',
    '*.nasm',
    '*.s',
  ],
  astro: ['*.astro'],
  'astro-config': [
    'astro.config.cjs',
    'astro.config.cts',
    'astro.config.js',
    'astro.config.mjs',
    'astro.config.mts',
    'astro.config.ts',
  ],
  audio: [
    '/aud',
    '/audio',
    '/audios',
    '/auds',
    '/music',
    '/sound',
    '/sounds',
    '/soundtrack',
    '/soundtracks',
    '*.3ga',
    '*.aa3',
    '*.aac',
    '*.aacp',
    '*.aif',
    '*.aifc',
    '*.aiff',
    '*.amr',
    '*.ape',
    '*.at3',
    '*.at9',
    '*.atp',
    '*.au',
    '*.caf',
    '*.flac',
    '*.hma',
    '*.lbc',
    '*.m1a',
    '*.m2a',
    '*.m4a',
    '*.m4b',
    '*.mp+',
    '*.mp1',
    '*.mp2',
    '*.mp3',
    '*.mpa',
    '*.mpc',
    '*.mpp',
    '*.mt9',
    '*.ogg',
    '*.oma',
    '*.omg',
    '*.opus',
    '*.pcm',
    '*.qcp',
    '*.ra',
    '*.ram',
    '*.shn',
    '*.sil',
    '*.snd',
    '*.spx',
    '*.tta',
    '*.wav',
    '*.wave',
    '*.wma',
    '*.wv',
    '*.wvc',
  ],
  audition: ['*.sesx'],
  aurelia: ['aurelia.json'],
  auth: [
    '/auth',
    '/authenticate',
    '/authenticated',
    '/authentication',
    '/authentications',
    '/cookie',
    '/cookies',
    '/devise',
    '/session',
    '/sessions',
  ],
  autohotkey: ['*.ahk'],
  autoit: ['*.au3'],
  azure: ['/.azure', '/.azure-pipelines', '/.azure-pipelines-ci', '/azure'],
  babel: [
    '.babel-plugin-macrosrc',
    '.babel-plugin-macrosrc.js',
    '.babel-plugin-macrosrc.json',
    '.babel-plugin-macrosrc.yaml',
    '.babel-plugin-macrosrc.yml',
    '.babelrc',
    '.babelrc.cjs',
    '.babelrc.js',
    '.babelrc.json',
    '.babelrc.mjs',
    'babel-plugin-macros.config.js',
    'babel-transform.js',
    'babel.config.cjs',
    'babel.config.js',
    'babel.config.json',
    'babel.config.mjs',
  ],
  storage: [
    '/back-up',
    '/back-ups',
    '/backup',
    '/backups',
    '/bak',
    '/baks',
    '/bk',
    '/bkp',
    '/bkps',
    '/dump',
    '/dumps',
    '/storage',
    '/storages',
    '/store',
    '/stores',
    '/syncbackup',
  ],
  ballerina: ['*.bal', '*.balx'],
  batch: ['*.bat', '*.btm', '*.cmd'],
  bazel: ['*.bzl', '*.bazel', '.bazelrc', '.bazelversion'],
  'bazel-ignore': ['.bazelignore'],
  benchmark: [
    '/bench',
    '/benchmark',
    '/benchmarks',
    '/measure',
    '/measurement',
    '/measures',
    '/performance',
  ],
  bitbucket: ['bitbucket-pipelines.yaml', 'bitbucket-pipelines.yml'],
  bithound: ['.bithoundrc'],
  bloc: ['/bloc'],
  boot: ['/boot'],
  brainfuck: ['*.b', '*.bf'],
  browserslist: ['.browserslistrc', 'browserslist'],
  buildkite: ['/.buildkite', '/buildkite', 'buildkite.yaml', 'buildkite.yml'],
  bun: ['/.bun', '/bun', '/bunjs', 'bunfig.toml'],
  'bun-lock': ['bun.lockb'],
  c: ['/c', '*.c'],
  calendar: [
    '/calendar',
    '/calendars',
    '/date',
    '/dates',
    '*.ical',
    '*.icalendar',
    '*.ics',
    '*.ifb',
  ],
  carbon: ['*.carbon'],
  cargo: ['cargo.toml'],
  'cargo-lock': ['cargo.lock'],
  certificate: [
    '/ca-cert',
    '/ca-certificates',
    '/cert',
    '/certificate',
    '/certificates',
    '/certs',
    '/ssl',
    '/ssl-cert',
    '/tls',
    '/verification',
    '/verified',
    '/verify',
  ],
  ceylon: ['*.ceylon'],
  version: [
    '/changelog',
    '/changelogs',
    'changelog',
    'changelog.md',
    'changelog.rst',
    'changelog.txt',
    'changes',
    'changes.md',
    'changes.rst',
    'changes.txt',
    'version',
    'version.md',
    'version.rst',
    'version.txt',
  ],
  lint: ['lint'],
  'ci-yml': ['ci.yaml', 'ci.yml'],
  circleci: ['/.circleci', '/circleci'],
  clean: ['*.abc', '*.dcl', '*.icl'],
  mobile: [
    '/client',
    '/clients',
    '/front-end',
    '/frontend',
    '/mobile',
    '/mobiles',
    '/portability',
    '/portable',
    '/pwa',
    '/webapp',
  ],
  clojure: ['*.clj', '*.cljc', '*.cljs', '*.edn'],
  cloud: ['/.aws', '/aws', '/cloud', '/drive', '/iclouddrive', '/onedrive'],
  cloudfoundry: ['.cfignore'],
  cmake: ['/cmake', '/cmaketools'],
  cobol: ['*.cbl', '*.cob'],
  codeclimate: ['.codeclimate.yml'],
  coffeescript: ['*.coffee', '*.litcoffee'],
  coldfusion: ['*.cfc', '*.cfm', '*.cfml', '*.lucee'],
  component: [
    '/bower_components',
    '/component',
    '/components',
    '/fragment',
    '/fragments',
    '/part',
    '/parts',
  ],
  composer: ['/composer'],
  conduct: [
    'code_of_conduct',
    'code_of_conduct.md',
    'code_of_conduct.rst',
    'code_of_conduct.txt',
  ],
  config: [
    '/.config',
    '/.setting',
    '/.settings',
    '/cfg',
    '/cfgs',
    '/conf',
    '/config',
    '/configs',
    '/configuration',
    '/configurations',
    '/confs',
    '/local settings',
    '/meta-inf',
    '/setting',
    '/settings',
    '*.cfg',
    '*.cnf',
    '*.conf',
    '*.config',
    '*.ini',
    '*.options',
    '*.prefs',
    '*.properties',
    '*.props',
    '*.settings',
  ],
  contact: ['/contact', '/contacts', '/userdata'],
  controller: [
    '/controller',
    '/controllers',
    '/handler',
    '/handlers',
    '/provider',
    '/providers',
  ],
  core: ['/core', '/cores', '/kernel', '/kernels', '*.exe', '*.msi'],
  cpp: [
    '/c++',
    '/cc',
    '/cp',
    '/cpp',
    '/cxx',
    '*.c++',
    '*.cc',
    '*.cp',
    '*.cpp',
    '*.cxx',
  ],
  cron: [
    '/cron',
    '/cron.d',
    '/cron.daily',
    '/cron.hourly',
    '/cron.monthly',
    '/cron.weekly',
    '/cronjob',
    '/cronjobs',
    '/crons',
    '/time',
    '/timer',
  ],
  crystal: ['*.cr'],
  csharp: ['*.cs', '*.csx'],
  css: ['/css', '/style', '/styles', '/stylesheet', '/stylesheets', '*.css'],
  'css-map': ['*.css.map'],
  'css-rtl': ['*.rtl.css', '*.rtl.min.css'],
  cuda: ['*.cu', '*.cuh'],
  cursor: ['*.cur'],
  cypress: [
    '/.cypress',
    '/cypress',
    'cypress.config.cjs',
    'cypress.config.js',
    'cypress.config.mjs',
    'cypress.config.ts',
    'cypress.env.json',
    'cypress.json',
  ],
  d: ['*.d'],
  dart: [
    '/.dart',
    '/.dart-tool',
    '/.dart_tool',
    '/.flutter-devtools',
    '/dart',
    '/flutter',
    '*.dart',
    '.pubignore',
    'dart',
  ],
  'dart-ignore': ['.dartignore'],
  database: [
    '/database',
    '/databases',
    '/db',
    '/dbms',
    '/dbs',
    '/migrate',
    '/migration',
    '/migrations',
    '/queries',
    '/query',
    '/sql',
    '*.db',
    '*.pdb',
    '*.pgsql',
    '*.pkb',
    '*.pks',
    '*.sql',
  ],
  debug: ['/bug', '/bugfix', '/bugfixes', '/bugs', '/debug', '/debugging'],
  default: [],
  deno: ['deno.json', 'deno.jsonc', 'deno.lock'],
  dependabot: ['dependabot.yaml', 'dependabot.yml'],
  desktop: ['/desktop', '/desktops'],
  dist: [
    '/.bin',
    '/bin',
    '/build',
    '/builds',
    '/cgi-bin',
    '/desktop-build',
    '/dist',
    '/dists',
    '/ebin',
    '/out',
    '/output',
    '/outputs',
    '/release',
    '/releases',
    '/sbin',
    '/usrbin',
  ],
  dll: ['*.dlc', '*.dll', '*.drv', '*.ocx'],
  doc: [
    '/doc',
    '/docs',
    '/document',
    '/documentation',
    '/documentations',
    '/documents',
    '/markdown',
    '/md',
    '/my documents',
  ],
  docker: [
    '/.docker',
    '/docker',
    '/dockerfiles',
    '*.dockerfile',
    'compose.yaml',
    'compose.yml',
    'docker-compose.yaml',
    'docker-compose.yml',
    'dockerfile',
  ],
  'docker-ignore': ['.dockerignore'],
  dot: ['*.def', '*.dot', '*.jst'],
  download: [
    '/dl',
    '/dls',
    '/download',
    '/downloader',
    '/downloaders',
    '/downloads',
    '/install',
    '/installed',
    '/installer',
    '/installers',
    '/installs',
  ],
  dropbox: ['/drop box', '/dropbox'],
  dylan: ['*.dylan', '*.lid'],
  editorconfig: ['.editorconfig'],
  eiffel: ['*.e'],
  elixir: [
    '/.mix',
    '/elixir',
    '*.eex',
    '*.ex',
    '*.exs',
    '*.heex',
    '*.leex',
    '.elixir',
  ],
  elm: ['*.elm'],
  email: ['*.eml', '*.emlx', '*.mbx', '*.msg', '.mailmap'],
  ember: ['.ember-cli', '.ember-cli.js', 'ember-cli-builds.js'],
  environment: [
    '/.env',
    '/.venv',
    '/devenvironments',
    '/env',
    '/environment',
    '/environments',
    '/envs',
    '/venv',
    '/venvs',
    '/virtualenv',
    '*.env',
    '.env.defaults',
    '.env.dev',
    '.env.development',
    '.env.dist',
    '.env.example',
    '.env.prod',
    '.env.production',
    '.env.sample',
    '.env.template',
    '.env.test',
  ],
  epub: ['*.epub'],
  erlang: ['*.erl', '*.hrl'],
  error: [
    '/crash',
    '/crashes',
    '/crashing',
    '/err',
    '/error',
    '/error-codes',
    '/errorcodes',
    '/errors',
    '/errs',
    '/exception',
    '/exceptions',
    '/fail',
    '/failed',
    '/fails',
  ],
  eslint: [
    '.eslintcache',
    '.eslintrc',
    '.eslintrc.cjs',
    '.eslintrc.js',
    '.eslintrc.json',
    '.eslintrc.yaml',
    '.eslintrc.yml',
    'eslint',
    'eslint.config.js',
    'eslint.config.mjs',
  ],
  'eslint-ignore': ['.eslintignore'],
  etc: [
    '/alt',
    '/alternative',
    '/alternatives',
    '/alts',
    '/etc',
    '/extra',
    '/extras',
    '/misc',
    '/miscellaneous',
    '/more',
    '/other',
    '/others',
  ],
  event: ['/config_states', '/event', '/events', '/state', '/states'],
  example: [
    '/demo',
    '/demos',
    '/example',
    '/examples',
    '/idea',
    '/ideas',
    '/sample',
    '/sample-data',
    '/samples',
  ],
  excel: [
    '*.xla',
    '*.xlam',
    '*.xlb',
    '*.xlc',
    '*.xld',
    '*.xlk',
    '*.xll',
    '*.xlm',
    '*.xlsb',
    '*.xlsm',
    '*.xlsx',
    '*.xlt',
    '*.xltm',
    '*.xlv',
    '*.xlw',
  ],
  experimental: [
    '/experiment',
    '/experimental',
    '/experimentals',
    '/experimenting',
  ],
  export: ['/export', '/exported', '/exports'],
  factory: ['/factories', '/factory'],
  fastlane: ['appfile', 'fastfile'],
  favicon: [
    '/favicon',
    '/favicons',
    'favicon.ico',
    'favicon.png',
    'favicon.svg',
    'favicon.webp',
  ],
  feedback: ['/feedback', '/feedbacks', '/support'],
  figma: ['*.fig', '*.jam'],
  file: [
    '/asset',
    '/assets',
    '/file',
    '/filedata',
    '/files',
    '/res',
    '/resource',
    '/resources',
    '/static',
  ],
  filter: ['/filter', '/filters'],
  payment: [
    '/banking',
    '/finance',
    '/finances',
    '/income',
    '/money',
    '/payment',
    '/payments',
    '/revenue',
    '/tax',
    '/taxes',
  ],
  firebase: [
    '/.firebase',
    '/firebase',
    '.firebaserc',
    'firebase.json',
    'firestore.indexes.json',
    'firestore.rules',
  ],
  folder: ['/dir', '/directories', '/directory', '/folder', '/folders'],
  font: [
    '/fnt',
    '/fnts',
    '/font',
    '/fonts',
    '*.dfont',
    '*.eot',
    '*.fnt',
    '*.odttf',
    '*.otf',
    '*.pfa',
    '*.pfb',
    '*.t11',
    '*.t42',
    '*.ttc',
    '*.tte',
    '*.ttf',
    '*.ttf.bin',
    '*.ufo',
    '*.ufo2',
    '*.ufo3',
    '*.woff',
    '*.woff2',
  ],
  forth: ['*.4th', '*.forth', '*.fth'],
  fortran: ['*.f', '*.f03', '*.f77', '*.f90', '*.f95', '*.for'],
  fsharp: ['*.fs', '*.fsi', '*.fsproj', '*.fsscript', '*.fsx'],
  'funding-yml': ['funding.yaml', 'funding.yml'],
  game: ['/game', '/games', '/gaming', '/saved games', '/xboxgames'],
  gatsby: [
    'gatsby-browser.js',
    'gatsby-browser.tsx',
    'gatsby-config.js',
    'gatsby-config.mjs',
    'gatsby-config.ts',
    'gatsby-node.js',
    'gatsby-node.mjs',
    'gatsby-node.ts',
    'gatsby-ssr.js',
    'gatsby-ssr.tsx',
  ],
  gemfile: ['gemfile'],
  'gemfile-lock': ['gemfile.lock'],
  generator: [
    '/auto',
    '/autoload',
    '/autoloader',
    '/autostart',
    '/cfn-gen',
    '/gen',
    '/generate',
    '/generated',
    '/generator',
    '/generators',
    '/gens',
  ],
  getx: ['/getx'],
  git: [
    '/.git',
    '/.githooks',
    '/.submodules',
    '/commit',
    '/commits',
    '/git',
    '/git-hooks',
    '/githooks',
    '/patches',
    '/submodules',
    '*.patch',
    '.gitattributes',
    '.gitinclude',
    '.gitkeep',
    '.gitmessage',
    '.gitmodules',
    '.gitpreserve',
    '.keep',
  ],
  'git-config': ['.git/config', '.gitconfig'],
  'git-ignore': ['.git-blame-ignore', '.git-blame-ignore-revs', '.gitignore'],
  github: [
    '/.github',
    '/github desktop',
    '/github',
    '/issue_template',
    '/workflows',
  ],
  gitlab: ['.gitlab-ci.yml'],
  gitpod: ['.gitpod.yml'],
  global: [
    '/browser',
    '/browsers',
    '/g11n',
    '/global',
    '/globalisation',
    '/globalization',
    '/globals',
    '/public',
    '/site',
    '/web',
    '/website',
    '/www',
    '/wwwroot',
  ],
  gnupg: ['/.gnupg', '/gnupg', '/gpg'],
  go: ['/go', '/go-build', '/golang', '*.go'],
  'go-mod': ['go.mod', 'go.sum', 'go.work', 'go.work.sum'],
  godot: ['/.godot', '/.godot-cpp', '/godot', '/godot-cpp', '*.gd'],
  gradle: [
    '/.gradle',
    '/gradle',
    '*.gradle',
    'gradle',
    'gradle-wrapper.properties',
    'gradle.properties',
    'gradlew',
  ],
  graphcool: ['*.graphcool'],
  graphql: ['/gql', '/graphql', '*.gql', '*.graphql'],
  'graphql-config': [
    '.graphqlconfig',
    '.graphqlrc',
    '.graphqlrc.cjs',
    '.graphqlrc.js',
    '.graphqlrc.json',
    '.graphqlrc.toml',
    '.graphqlrc.ts',
    '.graphqlrc.yaml',
    '.graphqlrc.yml',
    'graphql.config.cjs',
    'graphql.config.js',
    'graphql.config.json',
    'graphql.config.toml',
    'graphql.config.ts',
    'graphql.config.yaml',
    'graphql.config.yml',
  ],
  groovy: ['*.groovy', '*.gsh', '*.gvy', '*.gy'],
  group: [
    '/communities',
    '/community',
    '/customer',
    '/customers',
    '/friend',
    '/friends',
    '/group',
    '/groups',
  ],
  guard: ['/guard', '/guards', '/secure', '/security'],
  gulp: [
    'gulpfile.babel.js',
    'gulpfile.cjs',
    'gulpfile.cts',
    'gulpfile.js',
    'gulpfile.mjs',
    'gulpfile.mts',
    'gulpfile.ts',
  ],
  h: ['*.h'],
  hack: ['*.hack', '*.hck'],
  'hack-config': ['.hhconfig'],
  handlebars: ['*.handlebars', '*.hbs', '*.mustache'],
  harbour: ['*.ch', '*.hb', '*.hbp', '*.prg'],
  hardhat: ['hardhat.config.js', 'hardhat.config.ts'],
  haskell: ['*.hs', '*.lhs'],
  haxe: ['*.hx', '*.hxml'],
  hcl: ['*.hcl'],
  helper: ['/helper', '/helpers', '/render-helpers'],
  heroku: ['heroku.yml', 'procfile', 'procfile.dev', 'procfile.prod'],
  'heroku-ignore': ['.slugignore'],
  home: ['/home', '/menu', '/start menu', '/start'],
  hpp: ['*.h++', '*.hh', '*.hpp', '*.hxx', '*.inl', '*.tcc'],
  html: [
    '/html',
    '/markup',
    '/page',
    '/pages',
    '/screen',
    '/screens',
    '/view',
    '/views',
    '*.htm',
    '*.html',
    '*.xhtml',
  ],
  husky: [
    '.huskyrc',
    '.huskyrc.js',
    '.huskyrc.json',
    '.huskyrc.yaml',
    '.huskyrc.yml',
    'husky.config.js',
  ],
  hy: ['*.hy'],
  idris: ['*.ibc', '*.idr'],
  illustrator: ['*.ai'],
  image: [
    '/_image',
    '/_images',
    '/_img',
    '/_imgs',
    '/accountpictures',
    '/avatar',
    '/avatars',
    '/brand',
    '/branding',
    '/brands',
    '/fig',
    '/figs',
    '/figure',
    '/figures',
    '/image',
    '/images',
    '/img',
    '/imgs',
    '/logo',
    '/logos',
    '/m',
    '/media',
    '/my pictures',
    '/pfp',
    '/pfps',
    '/photo',
    '/photos',
    '/pic',
    '/pics',
    '/picture',
    '/pictures',
    '/screengrab',
    '/screengrabs',
    '/screenshot',
    '/screenshots',
    '*.afphoto',
    '*.apng',
    '*.apx',
    '*.ase',
    '*.aseprite',
    '*.avci',
    '*.avcs',
    '*.avif',
    '*.avifs',
    '*.bmp',
    '*.bpg',
    '*.brk',
    '*.clip',
    '*.cpt',
    '*.dds',
    '*.dib',
    '*.djv',
    '*.djvu',
    '*.dng',
    '*.eps',
    '*.exr',
    '*.flif',
    '*.fpx',
    '*.gbr',
    '*.gif',
    '*.hdp',
    '*.heic',
    '*.heics',
    '*.heif',
    '*.heifs',
    '*.icns',
    '*.ico',
    '*.img',
    '*.j2c',
    '*.j2k',
    '*.jb2',
    '*.jbg',
    '*.jbig',
    '*.jbig2',
    '*.jfi',
    '*.jfif',
    '*.jif',
    '*.jng',
    '*.jp2',
    '*.jpc',
    '*.jpe',
    '*.jpeg',
    '*.jpf',
    '*.jpg',
    '*.jpg2',
    '*.jpm',
    '*.jpx',
    '*.jxl',
    '*.jxr',
    '*.jxs',
    '*.kra',
    '*.mdp',
    '*.mng',
    '*.ora',
    '*.pbm',
    '*.pdn',
    '*.pgf',
    '*.pgm',
    '*.pic',
    '*.png',
    '*.pnm',
    '*.ppm',
    '*.qoi',
    '*.qtvr',
    '*.raw',
    '*.sai',
    '*.sai2',
    '*.six',
    '*.sixel',
    '*.tga',
    '*.tif',
    '*.tiff',
    '*.wbmp',
    '*.wdp',
    '*.webp',
    '*.wp2',
    '*.xcf',
  ],
  import: [
    '/_includes',
    '/_partials',
    '/import',
    '/imported',
    '/imports',
    '/in',
    '/inc',
    '/include',
    '/includes',
    '/partial',
    '/partials',
  ],
  indesign: ['*.indd'],
  initializer: [
    '/init',
    '/initialize',
    '/initializer',
    '/initializers',
    '/inits',
  ],
  intellij: ['/.idea'],
  ios: ['/ios'],
  iso: ['*.iso'],
  java: ['/java', '/jvm', '*.java', '*.jmod', '*.jsp'],
  'java-class': ['*.class'],
  'java-jar': ['*.jar'],
  javascript: ['/javascript', '/js', '*.cjs', '*.js', '*.mjs'],
  'javascript-component': ['*.component.js'],
  'javascript-config': ['jsconfig.json'],
  'javascript-controller': ['*.controller.js'],
  'javascript-exception': ['*.error.js', '*.exception.js'],
  'javascript-filter': ['*.filter.js'],
  'javascript-guard': ['*.guard.js'],
  'javascript-map': ['*.cjs.map', '*.js.map', '*.mjs.map'],
  'javascript-pipe': ['*.pipe.js'],
  'javascript-server': ['*.server.js'],
  'javascript-service': ['*.service.js'],
  'javascript-store': ['*.store.js'],
  'javascript-test': [
    '*.cy.js',
    '*.e2e-spec.cjs',
    '*.e2e-spec.js',
    '*.e2e-spec.mjs',
    '*.js.snap',
    '*.spec.cjs',
    '*.spec.js',
    '*.spec.mjs',
    '*.test.cjs',
    '*.test.js',
    '*.test.mjs',
  ],
  'javascript-worker': [
    'service-worker.js',
    'serviceworker.js',
    'sw.js',
    'worker.js',
  ],
  jenkins: ['*.jenkins', '*.jenkinsfile', 'jenkinsfile'],
  jinja: ['*.j2', '*.jinja', '*.jinja2'],
  job: ['/job', '/jobs'],
  jquery: ['jquery.js', 'jquery.min.js'],
  json: [
    '/appdata',
    '/application data',
    '/data',
    '/json',
    '*.json',
    '*.json5',
    '*.jsonc',
    '*.jsonl',
    '*.ndjson',
  ],
  'json-other': ['*.cson', '*.ron', '*.tf.json'],
  julia: ['/jl', '/julia', '*.jl'],
  jupyter: ['*.ipynb'],
  key: [
    '/jwt',
    '/key',
    '/keys',
    '/tkn',
    '/token',
    '/tokens',
    '*.asc',
    '*.gpg',
    '*.key',
    '*.pem',
    '*.pub',
    '.htpasswd',
  ],
  kotlin: ['*.kt', '*.ktm', '*.kts'],
  kubernetes: ['/.k8s', '/.kubernetes', '/k8s', '/kubernetes'],
  laravel: ['*.blade.php', '*.inky.php', 'artisan'],
  layer: ['/layer', '/layers'],
  less: ['*.less'],
  lib: [
    '/lib',
    '/lib32',
    '/lib64',
    '/libraries',
    '/library',
    '/libs',
    '/libx32',
  ],
  license: [
    'authors',
    'codeowners',
    'copyright',
    'copyright.txt',
    'licence',
    'license',
    'license.md',
    'license.rst',
    'license.txt',
    'patent_grant',
  ],
  lighthouse: [
    '.lighthouserc.js',
    '.lighthouserc.json',
    '.lighthouserc.yaml',
    '.lighthouserc.yml',
    'lighthouserc.js',
    'lighthouserc.json',
    'lighthouserc.yaml',
    'lighthouserc.yml',
  ],
  like: ['/fav', '/favorite', '/favorites', '/favs', '/like', '/likes'],
  link: ['/link', '/links', '/url', '/urls', '*.url'],
  linux: ['/arch', '/linux', '/ubuntu', '/wsl', '/wslg'],
  lisp: ['*.lisp', '*.lsp'],
  livescript: ['*.ls'],
  locale: [
    '/i18n',
    '/internationalization',
    '/internationalizations',
    '/intl',
    '/intls',
    '/l10n',
    '/lang',
    '/langs',
    '/language',
    '/languages',
    '/locale',
    '/locales',
    '/localization',
    '/localizations',
    '/translate',
    '/translation',
    '/translations',
  ],
  lock: [
    '/.private',
    '/_private',
    '/hidden',
    '/lock',
    '/locked',
    '/priv',
    '/private',
    '*.enc',
    '*.lock',
    'security',
    'security.md',
    'security.txt',
  ],
  log: ['/_logs', '/log', '/logging', '/logs', '*.log'],
  login: [
    '/login',
    '/logins',
    '/registration',
    '/registrations',
    '/signup',
    '/signups',
  ],
  lolcode: ['*.lol', '*.lols'],
  lua: ['/lua', '*.lua', '.luacheckrc'],
  mail: [
    '/email',
    '/emails',
    '/mail',
    '/mailer',
    '/mailers',
    '/mailoutput',
    '/mails',
    '/mailtodisk',
    '/phpmailer',
    '/smtp',
  ],
  makefile: ['*.mk', 'gnumakefile', 'kbuild', 'makefile'],
  markdown: ['*.markdown', '*.md', '*.rmd', '*.rst'],
  'markdown-mdx': ['*.mdx'],
  markdownlint: ['.mdlrc'],
  marko: ['*.marko'],
  mathematica: ['*.nb'],
  matlab: [
    '*.m',
    '*.mat',
    '*.mex',
    '*.mlapp',
    '*.mlappinstall',
    '*.mlpkginstall',
    '*.mltbx',
    '*.mlx',
  ],
  maven: [
    '/.mvn',
    '/maven',
    'jvm.config',
    'maven.config',
    'mvnw',
    'mvnw.cmd',
    'pom.xml',
  ],
  mermaid: ['*.mermaid', '*.mmd'],
  minecraft: [
    '*.mca',
    '*.mcaddon',
    '*.mcfunction',
    '*.mcgame',
    '*.mclevel',
    '*.mcmeta',
    '*.mcpack',
    '*.mcproject',
    '*.mcr',
    '*.mcstructure',
    '*.mctemplate',
    '*.mcworld',
    '*.mine',
    '*.mus',
    '.mcattributes',
    '.mcdefinitions',
  ],
  'minecraft-ignore': ['.mcignore'],
  mocha: [
    '.mocharc.js',
    '.mocharc.json',
    '.mocharc.jsonc',
    '.mocharc.yaml',
    '.mocharc.yml',
    'mocha.opts',
  ],
  mock: [
    '/__mocks__',
    '/_draft',
    '/_drafts',
    '/concept',
    '/concepts',
    '/draft',
    '/drafts',
    '/fixture',
    '/fixtures',
    '/mock',
    '/mocks',
    '/mockup',
    '/mockups',
    '/sketch',
    '/sketches',
  ],
  model: [
    '/class',
    '/classes',
    '/model',
    '/models',
    '/schema',
    '/schemas',
    '*.drawio',
  ],
  modernizr: ['.modernizrrc', '.modernizrrc.js', '.modernizrrc.json'],
  mojo: ['*.mojo', '*.🔥'],
  music: [
    '*.als',
    '*.dmpatch',
    '*.fst',
    '*.mid',
    '*.ppsf',
    '*.vpr',
    '*.vsq',
    '*.vsqx',
  ],
  nanostaged: [
    '.nano-staged.cjs',
    '.nano-staged.js',
    '.nano-staged.json',
    '.nano-staged.mjs',
    '.nanostagedrc',
    'nano-staged.cjs',
    'nano-staged.js',
    'nano-staged.json',
    'nano-staged.mjs',
  ],
  netlify: ['netlify.json', 'netlify.toml', 'netlify.yaml', 'netlify.yml'],
  newrelic: ['newrelic.yml'],
  next: [
    'next.config.js',
    'next.config.mjs',
    'next.config.mts',
    'next.config.ts',
  ],
  nginx: ['/nginx', 'fastcgi.conf', 'mime.types', 'nginx.conf', 'proxy.conf'],
  nim: ['*.nim', '*.nimble', '*.nims'],
  node: [
    '/node',
    '/node_modules',
    '/node_modules.nosync',
    '/nodejs',
    '*.node',
    '.esmrc',
    '.node-version',
  ],
  nodemon: ['nodemon-debug.json', 'nodemon.json'],
  npm: ['.npmrc'],
  'npm-ignore': ['.npmignore'],
  nrwl: ['nx.json'],
  'nrwl-ignore': ['.nxignore'],
  nuxt: ['/.nuxt', '/nuxt', 'nuxt.config.js', 'nuxt.config.ts'],
  'nuxt-ignore': ['.nuxtignore'],
  nvm: ['.nvmrc'],
  ocaml: ['*.ml', '*.mli'],
  onenote: ['*.one', '*.onetoc2'],
  package: ['/package', '/packages', '/pkg', '/pkgs', 'package.json'],
  'package-lock': ['package-lock.json'],
  pages: ['*.pages'],
  partytown: ['partytown'],
  password: ['/password', '/passwords', '/pwd', '/pwds'],
  pdf: ['*.pdf'],
  percy: ['.percy.yml'],
  perl: ['/perl', '*.cgi', '*.pl', '*.plx', '*.pm', '*.pod', '*.t', '*.xs'],
  photoshop: ['*.psb', '*.psd'],
  php: ['/php', '*.phar', '*.php', '*.phps', '*.pht', '*.phtml'],
  pine: ['*.pine'],
  pipe: ['/pipe', '/pipes'],
  plantuml: ['*.plantuml', '*.pu', '*.puml'],
  plasmic: ['/plasmic', 'plasmic.json'],
  'plasmic-lock': ['plasmic.lock'],
  playwright: [
    'playwright-ct.config.js',
    'playwright-ct.config.mjs',
    'playwright-ct.config.ts',
    'playwright.config.js',
    'playwright.config.mjs',
    'playwright.config.ts',
  ],
  plugin: [
    '/addon',
    '/addons',
    '/builtin',
    '/extension',
    '/extensions',
    '/extensions-builtin',
    '/middleware',
    '/middlewares',
    '/mod',
    '/module',
    '/modules',
    '/plugin',
    '/plugins',
  ],
  pnpm: ['.pnpmfile.cjs', 'pnpm-lock.yaml', 'pnpm-workspace.yaml'],
  post: [
    '/chat',
    '/chats',
    '/conversation',
    '/conversations',
    '/forum',
    '/forums',
    '/message',
    '/messages',
    '/messaging',
    '/msg',
    '/msgs',
    '/post',
    '/posts',
  ],
  postcss: ['*.pcss', '*.sss'],
  'postcss-config': [
    '.postcssrc',
    '.postcssrc.cjs',
    '.postcssrc.cts',
    '.postcssrc.js',
    '.postcssrc.json',
    '.postcssrc.ts',
    '.postcssrc.yaml',
    '.postcssrc.yml',
    'postcss.config.cjs',
    'postcss.config.cts',
    'postcss.config.js',
    'postcss.config.ts',
  ],
  powerpoint: [
    '*.odp',
    '*.potm',
    '*.potx',
    '*.ppa',
    '*.ppam',
    '*.pps',
    '*.ppsm',
    '*.ppsx',
    '*.ppt',
    '*.pptm',
    '*.pptx',
  ],
  powershell: [
    '*.cdxml',
    '*.ps1',
    '*.ps1xml',
    '*.psc1',
    '*.psd1',
    '*.psm1',
    '*.psrc',
    '*.pssc',
  ],
  premiere: ['*.prproj'],
  prettier: [
    '.prettierrc',
    '.prettierrc.cjs',
    '.prettierrc.js',
    '.prettierrc.json',
    '.prettierrc.toml',
    '.prettierrc.yaml',
    '.prettierrc.yml',
    'prettier.config.cjs',
    'prettier.config.js',
  ],
  'prettier-ignore': ['.prettierignore'],
  prisma: ['/prisma', '*.prisma'],
  processing: ['*.pde'],
  prolog: ['*.p', '*.pro'],
  protractor: [
    'protractor.conf.coffee',
    'protractor.conf.js',
    'protractor.conf.ts',
    'protractor.config.js',
    'protractor.config.ts',
  ],
  'publish-yml': ['publish.yaml', 'publish.yml'],
  pug: ['*.jade', '*.pug', '.pug-lintrc', '.pug-lintrc.js', '.pug-lintrc.json'],
  purescript: ['*.purs'],
  python: [
    '/.pytest_cache',
    '/__pycache__',
    '/pip',
    '/py',
    '/python',
    '*.py',
    '*.pyc',
    '*.pyd',
    '*.pyi',
    '*.pyo',
    '*.pyw',
    '*.pyz',
    '*.whl',
  ],
  r: ['*.r', '*.rda', '*.rdata', '*.rds', '.rhistory'],
  racket: ['*.rkt'],
  rails: ['*.erb', 'rails'],
  raku: [
    '*.p6',
    '*.pm6',
    '*.pod6',
    '*.raku',
    '*.rakudoc',
    '*.rakumod',
    '*.rakutest',
    '*.t6',
  ],
  react: ['/jsx', '/react', '/react-dom', '/react-native', '/reactjs', '/vdom'],
  reactjs: ['*.jsx'],
  'reactjs-test': [
    '*.cy.jsx',
    '*.spec-d.jsx',
    '*.spec.jsx',
    '*.test-d.jsx',
    '*.test.jsx',
    '*.jsx.snap',
  ],
  reactts: ['*.tsx'],
  'reactts-test': [
    '*.cy.tsx',
    '*.spec-d.tsx',
    '*.spec.tsx',
    '*.test-d.tsx',
    '*.test.tsx',
    '*.tsx.snap',
  ],
  readme: ['readme', 'readme.md', 'readme.rst', 'readme.txt'],
  reason: ['*.re', '*.rei'],
  rebol: ['*.reb'],
  red: ['*.red', '*.reds'],
  remix: ['remix.config.js', 'remix.config.ts'],
  replit: ['.replit'],
  repository: ['/repo', '/repos', '/repositories', '/repository'],
  rescript: ['*.res'],
  restore: ['/recover', '/recovery', '/restore', '/restored'],
  restql: ['*.restql', '*.rql'],
  review: ['/review', '/reviewed', '/reviews', '/revisal', '/revisals'],
  rexx: ['*.exec', '*.rex', '*.rexx'],
  riverpod: ['/riverpod'],
  robot: [
    '/ai',
    '/ai-art',
    '/codeformer',
    '/dalle',
    '/deepbooru',
    '/esrgan',
    '/gfpgan',
    '/gpt',
    '/lora',
    '/stable-diffusion',
    '/swinir',
    '/vae',
    '/vae-approx',
    'robots.txt',
  ],
  role: ['/role', '/roles', '/userroles'],
  root: ['/root', '/roots'],
  route: ['/route', '/router', '/routers', '/routes'],
  rspec: ['.rspec', 'rspec'],
  rubocop: ['.rubocop.yml', '.rubocop_todo.yml'],
  ruby: [
    '/gem',
    '/gems',
    '/rails',
    '/ruby',
    '*.gem',
    '*.gemspec',
    '*.rake',
    '*.rb',
    'rake',
    'rakefile',
  ],
  'ruby-application': ['application.rb'],
  'ruby-assets': ['assets.rb'],
  'ruby-config': ['config.ru'],
  'ruby-environment': [
    'development.rb',
    'environment.rb',
    'environments/test.rb',
    'production.rb',
  ],
  'ruby-importmap': ['importmap.rb'],
  'ruby-puma': ['puma.rb'],
  'ruby-routes': ['routes.rb'],
  'ruby-schema': ['schema.rb', 'seeds.rb'],
  'ruby-version': ['.ruby-version'],
  run: [
    '/common_runtime',
    '/distributed_runtime',
    '/run',
    '/runner',
    '/runner.xcodeproj',
    '/runner.xcworkspace',
    '/runtime',
    '/runtime_client',
    'run',
  ],
  rust: ['/.cargo', '/.rustup', '/cargo', '/rs', '/rust', '*.rlib', '*.rs'],
  'rust-main': ['main.rs'],
  sass: ['/_sass', '/_scss', '/sass', '/scss', '*.sass', '*.scss'],
  save: ['/bookmark', '/bookmarks', '/save', '/saved', '/saving'],
  scala: ['/sc', '/scala', '*.sc', '*.scala'],
  scratch: [
    '*.sb2',
    '*.sb3',
    '*.scratch',
    '*.sprite',
    '*.sprite2',
    '*.sprite3',
  ],
  script: ['/build_scripts', '/script', '/scripts'],
  search: ['/lost+found', '/search', '/searches'],
  semaphore: ['/.semaphore'],
  semgrep: ['semgrep.yml'],
  'semgrep-ignore': ['.semgrepignore'],
  sentry: ['.sentryclirc'],
  server: [
    '/api-server',
    '/back-end',
    '/backend',
    '/server',
    '/servers',
    '*.pid',
  ],
  service: ['/service', '/services'],
  setup: ['setup'],
  shader: ['/glsl', '/hlsl', '/shader', '/shaders'],
  share: [
    '/common',
    '/commons',
    '/redirect',
    '/redirects',
    '/sendto',
    '/share',
    '/shared',
    '/sharing',
  ],
  shell: ['*.awk', '*.ksh', '*.sh'],
  sketch: ['*.sketch'],
  slim: ['*.slim'],
  smallbasic: ['*.sb', '*.smallbasic'],
  snowpack: [
    'snowpack.config.cjs',
    'snowpack.config.cts',
    'snowpack.config.js',
    'snowpack.config.json',
    'snowpack.config.mjs',
    'snowpack.config.mts',
    'snowpack.config.ts',
  ],
  solidity: ['*.sol'],
  spreadsheet: ['*.csv', '*.ods', '*.psv', '*.tsv'],
  sqlite: ['*.db3', '*.s3db', '*.sl3', '*.sqlite', '*.sqlite3'],
  code: ['/code', '/main', '/source', '/sources', '/src', '/srcs'],
  stats: [
    '/diagram',
    '/diagrams',
    '/excel',
    '/numbers',
    '/stat',
    '/statistic',
    '/statistics',
    '/stats',
    '*.numbers',
  ],
  storybook: [
    '*.stories.js',
    '*.stories.jsx',
    '*.stories.mdx',
    '*.stories.svelte',
    '*.stories.ts',
    '*.stories.tsx',
    '*.story.js',
    '*.story.jsx',
    '*.story.mdx',
    '*.story.ts',
    '*.story.tsx',
  ],
  stylelint: [
    '.stylelintcache',
    '.stylelintrc.cjs',
    '.stylelintrc.js',
    '.stylelintrc.json',
    '.stylelintrc.yaml',
    '.stylelintrc.yml',
    'stylelint.config.cjs',
    'stylelint.config.js',
  ],
  'stylelint-ignore': ['.stylelintignore'],
  sublime: ['*.sublime-project', '*.sublime-workspace'],
  supabase: ['supabase.js', 'supabase.py'],
  svelte: ['*.svelte'],
  'svelte-config': ['svelte.config.cjs', 'svelte.config.js'],
  svg: [
    '/i',
    '/icns',
    '/ico',
    '/icon',
    '/icons',
    '/icos',
    '/svg',
    '/svgs',
    '*.svg',
    '*.svgz',
  ],
  swc: ['.swcrc'],
  swift: ['swift', '*.swift'],
  syntax: ['/spellcheck', '/spellchecks', '/syntax', '/syntaxes'],
  tailwind: [
    'tailwind.config.cjs',
    'tailwind.config.cts',
    'tailwind.config.js',
    'tailwind.config.ts',
    'tailwind.js',
    'tailwind.ts',
  ],
  target: ['/target', '/tgt'],
  task: [
    '/task',
    '/tasks',
    '/ticket',
    '/tickets',
    '/todo',
    '/todos',
    '*.todo',
    'todo',
    'todo.md',
    'todo.rst',
    'todo.txt',
    'todos',
    'todos.md',
    'todos.rst',
    'todos.txt',
  ],
  tauri: [
    'tauri.conf.json',
    'tauri.conf.json5',
    'tauri.config.json',
    'tauri.linux.conf.json',
    'tauri.macos.conf.json',
    'tauri.toml',
    'tauri.windows.conf.json',
  ],
  tcl: ['*.tbc', '*.tcl'],
  template: ['/_template', '/_templates', '/templ', '/template', '/templates'],
  temporary: [
    '/.cache',
    '/.pkg-cache',
    '/.temp',
    '/.tmp',
    '/aitemp',
    '/cache',
    '/cached',
    '/onedrivetemp',
    '/package cache',
    '/systemtemp',
    '/temp',
    '/temporary',
    '/tmp',
  ],
  terraform: ['*.tf', '*.tfstate', '*.tfvars'],
  test: [
    '/.test',
    '/.testing',
    '/.tests',
    '/__test__',
    '/__tests__',
    '/_test',
    '/_tests',
    '/boot-tests',
    '/boot_tests',
    '/coverage',
    '/dts-test',
    '/e2e',
    '/e2e-test',
    '/e2e-tests',
    '/integration-test',
    '/integration-testing',
    '/integration-tests',
    '/integration_test',
    '/integration_testing',
    '/integration_tests',
    '/it',
    '/kernel-tests',
    '/kernel_tests',
    '/memory-tests',
    '/memory_tests',
    '/runnertests',
    '/spec',
    '/specs',
    '/test',
    '/testing',
    '/tests',
    '/unit',
    '/unit-test',
    '/unit-tests',
    '/unit_test',
    '/unit_tests',
    'check',
    'test',
  ],
  text: ['*.txt'],
  texture: ['/texture', '/textures'],
  theme: ['/color', '/colors', '/design', '/designs', '/theme', '/themes'],
  threed: [
    '*.3d',
    '*.ac',
    '*.blend',
    '*.fbx',
    '*.kv6',
    '*.mesh',
    '*.mqo',
    '*.obj',
    '*.pmd',
    '*.pmx',
    '*.skp',
    '*.stl',
    '*.stp',
    '*.vac',
    '*.vox',
    '*.voxb',
    '*.x',
  ],
  toml: ['*.toml'],
  tool: ['/tool', '/toolbox', '/toolboxes', '/toolkit', '/toolkits', '/tools'],
  torrent: ['*.torrent'],
  trash: [
    // '/$recycle.bin',
    '/.trash',
    '/delete',
    '/dev/null',
    '/remove',
    '/removed',
    '/trash',
  ],
  travis: ['.travis.yml'],
  turborepo: ['turbo.json'],
  tutorial: [
    '/howto',
    '/howtos',
    '/intro',
    '/introduction',
    '/introductions',
    '/intros',
    '/learn',
    '/learning',
    '/tutorial',
    '/tutorials',
  ],
  typescript: [
    '/@types',
    '/ts',
    '/types',
    '/typescript',
    '/typings',
    '*.cts',
    '*.mts',
    '*.ts',
    'tsc',
  ],
  'typescript-component': ['*.component.ts'],
  'typescript-config': [
    'tsconfig.cjs.json',
    'tsconfig.esm.json',
    'tsconfig.json',
    'tsconfig.test.json',
  ],
  'typescript-controller': ['*.controller.ts'],
  'typescript-def': ['*.d.cts', '*.d.mts', '*.d.ts'],
  'typescript-exception': ['*.error.ts', '*.exception.ts'],
  'typescript-filter': ['*.filter.ts'],
  'typescript-guard': ['*.guard.ts'],
  'typescript-map': ['*.cts.map', '*.mts.map', '*.ts.map'],
  'typescript-pipe': ['*.pipe.ts'],
  'typescript-server': ['*.server.ts'],
  'typescript-service': ['*.service.ts'],
  'typescript-store': ['*.store.ts'],
  'typescript-test': [
    '*.cy.ts',
    '*.e2e-spec.cts',
    '*.e2e-spec.mts',
    '*.e2e-spec.ts',
    '*.spec-d.ts',
    '*.spec.cts',
    '*.spec.mts',
    '*.spec.ts',
    '*.test-d.ts',
    '*.test.cts',
    '*.test.mts',
    '*.test.ts',
    '*.ts.snap',
  ],
  'typescript-worker': [
    'service-worker.ts',
    'serviceworker.ts',
    'sw.ts',
    'worker.ts',
  ],
  unity: ['*.unity', '*.unity3d', '*.unitypackage', '*.unityweb'],
  uno: [
    'uno.config.js',
    'uno.config.mjs',
    'uno.config.mts',
    'uno.config.ts',
    'unocss.config.js',
    'unocss.config.mjs',
    'unocss.config.mts',
    'unocss.config.ts',
  ],
  upload: ['/upload', '/uploader', '/uploaders', '/uploads'],
  user: ['/all users', '/default user', '/personal', '/user', '/users', '/usr'],
  util: ['/test-utils', '/util', '/utilities', '/utility', '/utils'],
  v: ['*.v', 'v.mod', 'vpkg.json'],
  vala: ['vala', '*.vala', '*.vapi'],
  vendor: ['/third-party', '/third_party', '/vendor', '/vendors'],
  vercel: ['/.now', '/.vercel', '/now', '/vercel', 'now.json', 'vercel.json'],
  'vercel-ignore': ['.nowignore', '.vercelignore'],
  verdaccio: ['verdaccio.yml'],
  video: [
    '/caps',
    '/captures',
    '/mov',
    '/movie',
    '/movies',
    '/my videos',
    '/v',
    '/vid',
    '/video',
    '/videos',
    '/vids',
    '*.3g2',
    '*.3gp',
    '*.av1',
    '*.avc1',
    '*.avchd',
    '*.avi',
    '*.bik',
    '*.bk2',
    '*.f4v',
    '*.flv',
    '*.gifv',
    '*.hevc',
    '*.ivf',
    '*.m1v',
    '*.m2v',
    '*.m4p',
    '*.m4r',
    '*.m4v',
    '*.mj2',
    '*.mjp2',
    '*.mkv',
    '*.mov',
    '*.mp4',
    '*.mpe',
    '*.mpeg',
    '*.mpg',
    '*.mpv',
    '*.ogv',
    '*.qt',
    '*.rm',
    '*.rmvb',
    '*.smk',
    '*.swf',
    '*.vob',
    '*.webm',
    '*.wmv',
    '*.yuv',
  ],
  vim: ['*.vim', '.exrc', '.gvimrc', '.viminfo', '.vimrc'],
  visio: [
    '*.vdw',
    '*.vsd',
    '*.vsdm',
    '*.vsdx',
    '*.vsl',
    '*.vss',
    '*.vssm',
    '*.vssx',
    '*.vst',
    '*.vstm',
    '*.vstx',
  ],
  visualbasic: ['*.vb', '*.vbs'],
  visualstudio: [
    '*.csproj',
    '*.filters',
    '*.ruleset',
    '*.sln',
    '*.suo',
    '*.vcxitems',
    '*.vcxproj',
    '*.vsix',
    '*.vsixmanifest',
  ],
  vite: [
    'vite.config.cjs',
    'vite.config.cts',
    'vite.config.js',
    'vite.config.mjs',
    'vite.config.mts',
    'vite.config.ts',
  ],
  vitest: [
    'vitest.config.cjs',
    'vitest.config.cts',
    'vitest.config.js',
    'vitest.config.mjs',
    'vitest.config.mts',
    'vitest.config.ts',
  ],
  vmware: ['*.nvram', '*.scoreboard', '*.vmdk', '*.vmsd', '*.vmx'],
  vscode: [
    '/.vscode',
    '/.vscode-server',
    '/.vscode-test',
    '/code - insiders',
    '/vscode-extensions',
    '*.code-profile',
    '.vscode/launch.json',
    '.vscode/settings.json',
    '.vscode/tasks.json',
  ],
  'vscode-ignore': ['.vscodeignore'],
  vue: ['/.vuepress', '/vue', '/vue-compat', '/vuejs', '*.vue'],
  'vue-config': [
    'vetur.config.js',
    'vetur.config.ts',
    'volar.config.js',
    'vue.config.js',
    'vue.config.ts',
  ],
  wakatime: ['.wakatime-project', '.wakatime.cfg'],
  watchman: ['.watchmanconfig'],
  webassembly: ['*.wasm', '*.wat'],
  webhint: ['.hintrc'],
  webhook: ['/hook', '/hooks', '/webhook', '/webhooks'],
  webmanifest: ['*.webmanifest', 'manifest.json'],
  webpack: [
    'webpack.base.js',
    'webpack.base.ts',
    'webpack.common.js',
    'webpack.common.ts',
    'webpack.config.babel.js',
    'webpack.config.babel.ts',
    'webpack.config.base.js',
    'webpack.config.base.ts',
    'webpack.config.cjs',
    'webpack.config.common.js',
    'webpack.config.common.ts',
    'webpack.config.cts',
    'webpack.config.dev.js',
    'webpack.config.dev.ts',
    'webpack.config.js',
    'webpack.config.mjs',
    'webpack.config.mts',
    'webpack.config.prod.js',
    'webpack.config.prod.ts',
    'webpack.config.ts',
    'webpack.dev.js',
    'webpack.dev.ts',
    'webpack.dist.js',
    'webpack.dist.ts',
    'webpack.prod.js',
    'webpack.prod.ts',
    'webpack.test.js',
    'webpack.test.ts',
  ],
  widget: ['/widget', '/widgets'],
  windi: ['*.windi', 'windi.config.js', 'windi.config.json', 'windi.config.ts'],
  windows: ['/system32', '/win', '/windows'],
  wolfram: ['*.wl'],
  word: [
    '*.doc',
    '*.docb',
    '*.docm',
    '*.docx',
    '*.dotm',
    '*.dotx',
    '*.odt',
    '*.rtf',
    '*.wbk',
  ],
  work: ['/biz', '/business', '/work', '/worker', '/workers', '/working'],
  workspace: ['*.workspace', 'workspace'],
  wrapper: ['/wrap', '/wrapper', '/wrappers'],
  xd: ['*.xd'],
  xml: [
    '*.classpath',
    '*.dtd',
    '*.entitlements',
    '*.iml',
    '*.jrxml',
    '*.manifest',
    '*.plist',
    '*.project',
    '*.resx',
    '*.tmlanguage',
    '*.xcscheme',
    '*.xcsettings',
    '*.xcworkspacedata',
    '*.xml',
    '*.xml.dist',
    '*.xml.dist.sample',
    '*.xquery',
    '*.xsd',
    '*.xsl',
    '*.xslt',
  ],
  yarn: [
    '.yarn-integrity',
    '.yarnclean',
    '.yarnrc',
    '.yarnrc.yaml',
    '.yarnrc.yml',
    'yarn',
    'yarn-error.log',
  ],
  'yarn-lock': ['yarn.lock'],
  yml: ['*.yaml', '*.yaml-tmlanguage', '*.yaml.dist', '*.yml', '*.yml.dist'],
  zenodo: ['.zenodo.json'],
  zig: ['/zig', '*.zig', '*.zir', '*.zon'],
  zip: [
    '*.7z',
    '*.a',
    '*.ace',
    '*.ar',
    '*.arc',
    '*.br',
    '*.bz2',
    '*.bzip2',
    '*.cpio',
    '*.gz',
    '*.gzip',
    '*.lbr',
    '*.lz',
    '*.lz4',
    '*.lzma',
    '*.lzo',
    '*.rar',
    '*.rz',
    '*.s7z',
    '*.sbx',
    '*.sfark',
    '*.shar',
    '*.sz',
    '*.tar',
    '*.tbz2',
    '*.tgz',
    '*.tlz',
    '*.txz',
    '*.tz',
    '*.xz',
    '*.z',
    '*.zip',
    '*.zipx',
    '*.zst',
  ],
}
